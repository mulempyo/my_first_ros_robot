#include <ros.h>
#include <std_msgs/String.h>
#include <geometry_msgs/Twist.h>
#include "math.h"

ros::NodeHandle nh;
void dc_driver(const geometry_msgs::Twist& msg){
float a = msg.linear.x;
float c = msg.angular.z;

if(a>0 && c==0){ //straight
drive(255,255,1,0,0,1);
}

if(a<0 && c==0){ //backward
drive(255,255,0,1,1,0);
}

if(a==0 && c==0){ //stop
drive(0,0,0,0,0,0);
}
if(a==0 && c>0){ //right
drive(255,255,1,0,0,0);   
}
if(a==0 && c<0){ //left
drive(255,255,0,0,0,1);
}
}
ros::Subscriber<geometry_msgs::Twist> sub("cmd_vel", dc_driver); 


void setup()
{
pinMode(10, OUTPUT); //ENB
pinMode(8, OUTPUT); //IN 4
pinMode(7, OUTPUT); //IN 3 
pinMode(6, OUTPUT); //IN 2
pinMode(5, OUTPUT); //IN 1
pinMode(9, OUTPUT); //ENA 
nh.initNode();
nh.subscribe(sub);
}

void loop() {
nh.spinOnce();
}


void drive(int Lpwm, int Rpwm ,int in1 ,int in2 ,int in3 ,int in4){
analogWrite(9, Lpwm);
analogWrite(10, Rpwm);
digitalWrite(5, in1);
digitalWrite(6, in2);
digitalWrite(7, in3);
digitalWrite(8, in4);}
